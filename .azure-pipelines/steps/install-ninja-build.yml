####################################################################################################
## FileName:             install-ninja-build.yml
## Copyright:            Copyright Â© 2017-2019 Thomas Corwin, et al. All Rights Reserved.
## License:              https://github.com/tom-corwin/tcdfx/blob/master/LICENSE.md
####################################################################################################

parameters:
  architecture: '' # i386 / amd64

steps:

# Windows
- script: |
    @powershell -Command "Invoke-WebRequest https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip -OutFile C:\ninja-win.zip"
    mkdir C:\ninja
    @powershell -Command "Expand-Archive -LiteralPath C:\ninja-win.zip -DestinationPath C:\ninja"
    @echo ##vso[task.prependpath]C:\ninja
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  name: 'Install_Ninja_Build_Windows'
  displayName: 'Install Ninja Build'
  workingDirectory: '$(Build.Repository.LocalPath)'
  continueOnError: false

# Linux (x64)
- script: sudo apt-get install libgtk-3-dev ninja-build
  condition: and( eq( variables['Agent.OS'], 'Linux' ), eq( '${{ parameters.architecture }}', 'amd64'))
  name: 'Install_Ninja_GTK_Linux_amd64'
  displayName: 'Install Ninja Build and GTK+ Dev Deps'
  workingDirectory: '$(Build.Repository.LocalPath)'
  continueOnError: false

# Linux (x86)
- script: |
    llvmPackages=
    for i in libllvm6.0 clang-6.0 libclang-common-6.0-dev liblldb-6.0 liblldb-6.0-dev lld-6.0 lldb-6.0 llvm-6.0-dev python-lldb-6.0 libclang1-6.0 llvm-6.0 llvm-6.0-runtime; do llvmPackages="$llvmPackages $i=1:6.0-1ubuntu2~16.04.1"; done
    sudo dpkg --add-architecture i386
    sudo apt-get update
    sudo apt-get install --allow-downgrades gcc-multilib g++-multilib $llvmPackages libgtk-3-dev:i386 ninja-build
  condition: and( eq( variables['Agent.OS'], 'Linux' ), eq( '${{ parameters.architecture }}', 'x86'))
  name: 'Install_Ninja_GTK_Linux_x86'
  displayName: 'Install Ninja Build and GTK+ Dev Deps'
  workingDirectory: '$(Build.Repository.LocalPath)'
  continueOnError: false

# macOS
- script: |
    sudo mkdir -p /opt/ninja
    pushd /opt/ninja
    sudo wget https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-mac.zip
    sudo unzip ninja-mac.zip
    sudo chmod a+rx ninja
    popd
    echo '##vso[task.prependpath]/opt/ninja'
  condition: eq( variables['Agent.OS'], 'Darwin' )
  name: 'Install_Ninja_macOS'
  displayName: 'Install Ninja Build'
  workingDirectory: '$(Build.Repository.LocalPath)'
  continueOnError: false